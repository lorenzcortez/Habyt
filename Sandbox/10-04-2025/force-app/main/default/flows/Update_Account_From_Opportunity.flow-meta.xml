<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>49.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <description>This screen is where you can map the account fields (left Column) that you want to update.  Most often you will simply have the accounting field on the left, equals in the middle, and reference the field from your screen in the previous nodes on the right column.</description>
        <name>Assignment</name>
        <label>Assignment of New Values to Account</label>
        <locationX>618</locationX>
        <locationY>244</locationY>
        <assignmentItems>
            <assignToReference>AccountRecord.PersonEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Email</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AccountRecord.Phone</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Phone</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AccountRecord.FirstName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>First_Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AccountRecord.LastName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Last_Name</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Account1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Opportunity_Field_Assignment</name>
        <label>Opportunity Field Assignment</label>
        <locationX>802</locationX>
        <locationY>250</locationY>
        <assignmentItems>
            <assignToReference>OpportunityRecord.Name</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>{!AccountRecord.FirstName} +&quot; &quot;+ {!AccountRecord.LastName}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Opportunity</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>If_Opportunity_is_Initial</name>
        <label>If Opportunity is Initial</label>
        <locationX>791</locationX>
        <locationY>59</locationY>
        <defaultConnector>
            <targetReference>FinalScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OpportunityRecord.Record_Type_Name__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Common_Initial</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Opportunity_Field_Assignment</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Adding that it should update the opportunity name if it&apos;s an initial opportunity.</description>
    <interviewLabel>Update Account From Opportunity {!$Flow.CurrentDateTime}</interviewLabel>
    <label>CIS - Update Person Account Information on Opportunity</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <description>It knows what opportunity to get because it&apos;s passed from the lightning page that the screen component is embedded on.</description>
        <name>Get_Opportunity_Record</name>
        <label>GET Opportunity Record</label>
        <locationX>224</locationX>
        <locationY>50</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Selected_Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>OpportunityID</elementReference>
            </value>
        </filters>
        <object>Opportunity</object>
        <outputReference>OpportunityRecord</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>AccountId</queriedFields>
        <queriedFields>Record_Type_Name__c</queriedFields>
        <queriedFields>Name</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>This will get the account information from the opportunities account.  This uses the standard &quot;Account&quot; field on opportunities that&apos;s part of the standard Salesforce setup. 

CRITICAL NOTE: IF you want to add more fields to the screen which is in a future node you need to add it at the bottom of this node.  At the time of writing, we have email, phone, first name, and last name.  Any field you add to the update account node must be in here or else you will get a flow error.</description>
        <name>Get_Selected_Account</name>
        <label>GET Opportunities Account</label>
        <locationX>410</locationX>
        <locationY>50</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>OpportunityRecord.AccountId</elementReference>
            </value>
        </filters>
        <object>Account</object>
        <outputReference>AccountRecord</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>PersonEmail</queriedFields>
        <queriedFields>Phone</queriedFields>
        <queriedFields>FirstName</queriedFields>
        <queriedFields>LastName</queriedFields>
    </recordLookups>
    <recordUpdates>
        <description>This uses the values from the assignment node and updates the account with the information that it was assigned.</description>
        <name>Update_Account1</name>
        <label>Update Account</label>
        <locationX>618</locationX>
        <locationY>56</locationY>
        <connector>
            <targetReference>If_Opportunity_is_Initial</targetReference>
        </connector>
        <inputReference>AccountRecord</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Opportunity</name>
        <label>Update Opportunity</label>
        <locationX>802</locationX>
        <locationY>401</locationY>
        <connector>
            <targetReference>FinalScreen</targetReference>
        </connector>
        <inputReference>OpportunityRecord</inputReference>
    </recordUpdates>
    <screens>
        <name>FinalScreen</name>
        <label>FinalScreen</label>
        <locationX>1013</locationX>
        <locationY>219</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Headertext</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(222, 67, 75); font-family: sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);&quot;&gt;SUCCESS! &lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);&quot;&gt;The record has been updated. If you would like to make further changes please click on “Finish” and you’ll return to the input screen.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Update_Account</name>
        <label>Update Account</label>
        <locationX>410</locationX>
        <locationY>244</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Assignment</targetReference>
        </connector>
        <fields>
            <name>Header</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-family: sans-serif; background-color: rgb(255, 255, 255); color: rgb(231, 41, 35); font-size: 16px;&quot;&gt;This screen defaults the &lt;/span&gt;&lt;u style=&quot;font-family: sans-serif; background-color: rgb(255, 255, 255); color: rgb(231, 41, 35); font-size: 16px;&quot;&gt;current&lt;/u&gt;&lt;span style=&quot;font-family: sans-serif; background-color: rgb(255, 255, 255); color: rgb(231, 41, 35); font-size: 16px;&quot;&gt; data from &lt;/span&gt;&lt;b style=&quot;font-family: sans-serif; background-color: rgb(255, 255, 255); color: rgb(231, 41, 35); font-size: 16px;&quot;&gt;&lt;u&gt;this opportunities account&lt;/u&gt;&lt;/b&gt;&lt;span style=&quot;font-family: sans-serif; background-color: rgb(255, 255, 255); color: rgb(231, 41, 35); font-size: 16px;&quot;&gt;.&amp;nbsp;&amp;nbsp;If you make a change and click “save” it will update the account information with your changes.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>First_Name</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>AccountRecord.FirstName</elementReference>
            </defaultValue>
            <fieldText>First Name</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;&lt;b&gt;IF the first name is blank&lt;/b&gt; then it&apos;s likely that the full account name is in the last name field.  Please separate it out and split the names in this scenario as the first name is needed for later processes. &lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Last_Name</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>AccountRecord.LastName</elementReference>
            </defaultValue>
            <fieldText>Last Name</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Email</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>AccountRecord.PersonEmail</elementReference>
            </defaultValue>
            <fieldText>Email</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Phone</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>AccountRecord.Phone</elementReference>
            </defaultValue>
            <fieldText>Phone</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <startElementReference>Get_Opportunity_Record</startElementReference>
    <status>Active</status>
    <variables>
        <name>AccountRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>OpportunityID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>OpportunityRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
</Flow>
